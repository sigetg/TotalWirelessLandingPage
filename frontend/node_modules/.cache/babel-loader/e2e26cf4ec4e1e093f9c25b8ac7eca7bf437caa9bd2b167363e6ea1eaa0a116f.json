{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const eventService = {\n  // Get all events\n  getAllEvents: async () => {\n    const response = await api.get('/events');\n    return response.data;\n  },\n  // Get events by type\n  getEventsByType: async eventType => {\n    const response = await api.get(`/events/type/${eventType}`);\n    return response.data;\n  },\n  // Search events by location\n  searchEventsByLocation: async searchParams => {\n    const response = await api.post('/events/search', searchParams);\n    return response.data;\n  },\n  // Add new event\n  addEvent: async event => {\n    const response = await api.post('/events', event);\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","eventService","getAllEvents","response","get","data","getEventsByType","eventType","searchEventsByLocation","searchParams","post","addEvent","event"],"sources":["/Users/georges/code/TotalWirelessLandingPage/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Event, LocationSearch, EventSearchResult } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const eventService = {\n  // Get all events\n  getAllEvents: async (): Promise<Event[]> => {\n    const response = await api.get('/events');\n    return response.data;\n  },\n\n  // Get events by type\n  getEventsByType: async (eventType: string): Promise<Event[]> => {\n    const response = await api.get(`/events/type/${eventType}`);\n    return response.data;\n  },\n\n  // Search events by location\n  searchEventsByLocation: async (searchParams: LocationSearch): Promise<EventSearchResult[]> => {\n    const response = await api.post('/events/search', searchParams);\n    return response.data;\n  },\n\n  // Add new event\n  addEvent: async (event: Omit<Event, 'id' | 'created_at' | 'updated_at'>): Promise<Event> => {\n    const response = await api.post('/events', event);\n    return response.data;\n  },\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,YAAY,EAAE,MAAAA,CAAA,KAA8B;IAC1C,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,eAAe,EAAE,MAAOC,SAAiB,IAAuB;IAC9D,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,gBAAgBG,SAAS,EAAE,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,sBAAsB,EAAE,MAAOC,YAA4B,IAAmC;IAC5F,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,gBAAgB,EAAED,YAAY,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,QAAQ,EAAE,MAAOC,KAAsD,IAAqB;IAC1F,MAAMT,QAAQ,GAAG,MAAMN,GAAG,CAACa,IAAI,CAAC,SAAS,EAAEE,KAAK,CAAC;IACjD,OAAOT,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}